{"version":3,"sources":["components/DisplayItems.js","components/HelpModal.js","components/FavouriteList.js","components/Search.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayItems","props","className","Card","Img","variant","src","item","artworkUrl100","alt","trackName","Body","Title","Text","artistName","onClick","handleFavourites","trackId","kind","HelpModal","React","useState","isOpen","setIsOpen","hideModal","Button","Modal","show","onHide","Header","Footer","FavouriteList","Container","Table","striped","bordered","hover","favourite","id","artwork","removeFavourite","Search","handleCatagorySelect","eventKey","value","setState","catagory","handleSearchChange","event","searchItem","target","searchItemEdited","state","split","join","showButton","handleSubmit","toUpperCase","query","type","axios","get","then","res","data","results","length","alert","showNoResults","showNoFavourites","favourites","find","newFavourites","filter","Form","onChange","this","FormControl","placeholder","DropdownButton","title","onSelect","Dropdown","Item","map","index","Component","Home","App","rel","href","integrity","crossorigin","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e760b639.chunk.js","sourcesContent":["import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { FaStar } from 'react-icons/fa';\n\n// Component: DisplayItems\n// Description: Displays the items found in the search results\n const DisplayItems = (props) => {\n    return (\n        <div className=\"singleCard\">\n            <Card className='shadow-lg' >\n                <Card.Img variant=\"top\"  src={props.item.artworkUrl100} alt={props.item.trackName} />\n                <Card.Body>\n                    <Card.Title>{props.item.trackName} </Card.Title>\n                    <Card.Text>{props.item.artistName}</Card.Text>\n                    {/* add to favourites star icon \n                        which sends the info back to the Search component to be put into the \n                        favourites state array */}\n                    <div className=\"\" onClick={() => props.handleFavourites(\n                        props.item.trackId,\n                        props.item.kind,\n                        props.item.artistName,\n                        props.item.trackName,\n                        props.item.artworkUrl100,\n                        )}> \n                            <FaStar className='star'/>\n                        </div>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default DisplayItems;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n// Component: HelpModal\n// Description: This component is used to display the help modal which contains information about the application.\nconst HelpModal = () => {\n    // set the modal state\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    // Open the modal\n    const showModal = () => {\n      setIsOpen(true);\n    };\n  \n    // Close the modal\n    const hideModal = () => {\n      setIsOpen(false);\n    };\n  \n    return (\n      <div className=\"helpMoidal\">\n        <Button variant=\"btn btn-secondary\" onClick={showModal}> Help </Button>\n\n        <Modal show={isOpen} onHide={hideModal}>\n          <Modal.Header>\n            <Modal.Title>\n              Instructions:\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ul>\n              <li>\n                <h2 className=\"lead\"> Search for your favorite Itunes content! </h2>\n              </li>\n              <li>\n                <h3 className=\"lead\"> Simply enter a search term and select a catagory. </h3>\n              </li>\n              <li>\n                <h3 className=\"lead\"> Finally click 'Search' to view the results! </h3>\n              </li>\n              <li> \n                <h3 className=\"lead\"> To add an item to your favourites, click the 'star' icon on an item's card. </h3>\n              </li>\n            </ul>\n            <h3 className=\"lead text-center\"> And lastly... Enjoy! </h3>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={hideModal}> Return </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  };\n\nexport default HelpModal;","import React from 'react'\nimport { Container, Table} from 'react-bootstrap'\nimport { FaTrashAlt } from 'react-icons/fa'\n\n// Component: FavouriteList\n// Description: This component is responsible for displaying the list of favourites\n const FavouriteList = (props) => {\n    return (\n        <Container className=\"tableContainer\">\n            <Table striped bordered hover shadow-lg>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Kind</th>\n                        <th>Artwork</th>\n                        <th>Artist Name</th>\n                        <th>Track Name</th>\n                        <th> Remove</th>\n                    </tr>\n                </thead>\n                <tbody>\n                            <tr key={props.favourite.id}>\n                                <td>{props.favourite.id}</td>\n                                <td>{props.favourite.kind}</td>\n                                <td>\n                                    <img src={props.favourite.artwork} alt={props.favourite.trackName} />\n                                </td>\n                                <td>{props.favourite.artistName}</td>\n                                <td>{props.favourite.trackName}</td>\n                                {/* Remove button which conatins function sent from Search component */}\n                                <td> <button className=\"btn btn-danger\" onClick={() => props.removeFavourite(props.favourite.id)}> <FaTrashAlt/> </button> </td>\n                            </tr>\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default FavouriteList;","import React from 'react'\nimport axios from 'axios'\nimport {Container, Form, Button, FormControl, DropdownButton, Dropdown} from 'react-bootstrap'\n\n// Components imported\nimport DisplayItems from './DisplayItems'\nimport HelpModal from './HelpModal'\nimport FavouriteList from './FavouriteList'\n\n// Component: Search\n/* Description: Search component for the frontend this contains the search form,\n request to the backend and renders the display of the items, favourite list, the state management and logic*/\n\nclass Search extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      searchItem: '',\n      searchItemEdited: '',\n      catagory: '',\n      data: [],\n      favourites: [],\n    }\n  }\n\n    //when user selects catagory from dropdown menu it updates the state of catagory\n    handleCatagorySelect = (eventKey, value) => {\n        this.setState({catagory: eventKey})\n    }\n\n    //when user types in search bar it updates the state of searchItem and searchItemEdited\n    handleSearchChange = (event) => {\n        //recieve user input\n        this.setState({searchItem: event.target.value})\n        // split and join to remove spaces and replace spaces for '+'s to searchItem variable\n        const searchItemEdited = this.state.searchItem.split(' ').join('+')\n        this.setState({searchItemEdited: searchItemEdited})\n    }\n\n     //show button once user selects a catagory\n     showButton = () => {\n        if (this.state.catagory !== '') {\n            return (\n                <Button className=\"btn btn-primary\" onClick={this.handleSubmit}>Search {this.state.catagory.toUpperCase()} </Button>\n            )\n        }\n    }\n\n    /*  When user clicks search/submit button it sends user input to server.js\n        and recieves the response from the server and updates the state of data \n        if no results were found by the api an alert is sent to state that no results have been found\n    */\n    handleSubmit = (event) => {\n        // axios call to get data from server.js\n        let query = this.state.searchItemEdited\n        let type = this.state.catagory\n        axios.get(`/search/${query}/${type}`)\n        .then(res => {\n            this.setState({data: res.data.results})\n            if (res.data.results.length === 0) {\n                alert('Unfortunately no results were found!')\n            }\n        }\n        )\n    }\n\n    // Show no results message (Itunes Web Store Search Heading) if no results are found\n    showNoResults = () => {\n        if (this.state.data.length === 0) {\n            return (\n                <h1 id='noResults' > Itunes Web Store Search</h1>\n            )\n        }\n    }\n\n    // Show no favourites message if no favourites are found\n    showNoFavourites = () => {\n        if (this.state.favourites.length === 0 && this.state.searchItemEdited !== '' && this.state.catagory !== '' && this.state.data.length !== 0) {\n            return (\n                <h3 className=\"lead text-center\"> Click the star on an item to view your favourites here! </h3>\n            )\n        }\n    }\n\n    // Gets favourited item info from DisplayItems and sets it to favourites state\n    handleFavourites = (id, kind, artistName, trackName, artwork) => {\n        //if item is already in favourites it will not be added again\n        // else pushes item info to favourites state\n        if (this.state.favourites.find(item => item.id === id)) {\n            alert('This item has already been added to your favourites list!')\n        } else {\n        this.setState({favourites: [...this.state.favourites, {id: id, kind: kind, artistName: artistName, trackName: trackName, artwork: artwork}]})\n        alert('Added to your favourites list, scroll down to view!')\n        }\n    }\n\n    // Removes item from favourites\n    removeFavourite = (id) => {\n        // filter out item from favourites state\n        const newFavourites = this.state.favourites.filter(item => item.id !== id)\n        this.setState({favourites: newFavourites})\n        alert('Removed from favourites list')\n    }\n    \n    render() {\n        return (\n            <Container>\n\n                {/* Navbar/Header */}\n                    <div className=\"header\">\n                        {/* Seach form */}\n                        <Form onChange={this.handleSearchChange}>\n                            <FormControl type=\"text\" placeholder='Search term...' className=\"mr-sm-2\" />\n                        </Form>\n\n                        {/* Dropdown catagory menu */}\n                        <DropdownButton title='Catagories' id=\"dropdown-basic-button\" onSelect={this.handleCatagorySelect}>\n                                {/* when user selects an drop down item updates catagory state */}\n                                <Dropdown.Item eventKey='movie' value='Movie'> Movie </Dropdown.Item>\n                                <Dropdown.Item eventKey='podcast' value='Podcast'> Podcast </Dropdown.Item>\n                                <Dropdown.Item eventKey='music' value='Music'> Music </Dropdown.Item>\n                                <Dropdown.Item eventKey='audiobook' value='Audiobook'> Audiobook </Dropdown.Item>\n                                <Dropdown.Item eventKey='shortFilm' value='Short Film'> Short Film </Dropdown.Item>\n                                <Dropdown.Item eventKey='tvShow' value='TV Show'> TV Show </Dropdown.Item>\n                                <Dropdown.Item eventKey='software' value='Software'> Software </Dropdown.Item>\n                                <Dropdown.Item eventKey='ebook' value='Ebook'> Ebook </Dropdown.Item>\n                                <Dropdown.Item eventKey='all' value='All'> All </Dropdown.Item>\n                        </DropdownButton>\n\n                        {/* shows button once user selects a catagory */}\n                        <div className=\"searchButton\">\n                            {this.showButton()} \n                        </div>\n                    \n                        {/* Help modal with instructions */}\n                        <HelpModal className=\"modalButton\"/>\n                    </div>\n\n                {/* Display items */}\n                <Container className=\"cardsContainer\">\n                {this.state.data.length !== 0 ? (\n                    this.state.data.map((item, index) => {\n                        return (\n                            <DisplayItems\n                                key={index}\n                                item={item}\n                                handleFavourites={this.handleFavourites}\n                            />\n                        )\n                    })\n                ) : (\n                    <div className=\"noResults\">\n                        {/* Show no results message if no results are found and upon intial load */}\n                        {this.showNoResults()}\n                    </div>\n                )}\n                </Container>\n\n                {/* Favourites list */}\n                <Container className=\"favouritesContainer\">\n                {this.state.favourites.length !== 0 ? (\n                    this.state.favourites.map((favourite, index) => {\n                        return (\n                            <FavouriteList\n                                key={index}\n                                favourite={favourite}\n                                removeFavourite={this.removeFavourite}\n                            />\n                        )\n                    }\n                    )\n                ) : (\n                    <div className=\"noFavourites\">\n                        {/* Show no favourites message if no results are found */}\n                        {this.showNoFavourites()}\n                    </div>\n                )}\n                </Container>\n            </Container>\n        )\n    }\n}\n\nexport default Search;\n\n\n","import React, { Component } from 'react'\nimport Search from './Search.js'\n\n// Component: Home\n// Description: Home page which renders the search bar\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                <Search/>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Home from './components/Home.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Bootstrap styling */}\n        <link rel = \"stylesheet\"\n        href = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity = \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin = \"anonymous\" />\n\n        {/* Pathing */}\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/search\" element={<Home />} />\n          </Routes>\n        </Router>\n      </div>\n    )\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}